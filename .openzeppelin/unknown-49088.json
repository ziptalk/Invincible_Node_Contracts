{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x27Ab351e308Ac43287e5f9485846B513B1bA0233",
    "txHash": "0x2a3bd0c1d285644acc1ca512e465dbd437d6c5e35563edca51708b63f895d210"
  },
  "proxies": [
    {
      "address": "0x391Cef02cDEE8145868cf0A9D4Cfd56c6EfD6b5c",
      "txHash": "0x3e4865ac9093b875ce911eef77332dc822cd5ab930f80657ee5112843c8e17a4",
      "kind": "transparent"
    },
    {
      "address": "0xB67e999f21c3a34e2F325E038A79F160921D4DE0",
      "txHash": "0xb2804857a32fa6c2655510e52db6453ddd91d52f1b4f5ad27522f7025ec50f70",
      "kind": "transparent"
    },
    {
      "address": "0xEebaFa49fa878F8936a005D39748144cfFC353A7",
      "txHash": "0x8fb28707d29103091f6da57c3d79c93acfcc158e9f5d979e46baec9df57e0c92",
      "kind": "transparent"
    },
    {
      "address": "0xCF09814319a50471328D033d7421D0cDDa22bd97",
      "txHash": "0xf844626a3eb62b8674fb177c285795bba7428b008c4c8e108c2201ba686e143c",
      "kind": "transparent"
    },
    {
      "address": "0x0F055b301B284D4e359adC8632CDD96576702840",
      "txHash": "0x7296e26f06139740ca5623970e7b6e6d1d05768af302d4d3f684e9154ca1c707",
      "kind": "transparent"
    },
    {
      "address": "0xB02F049EDD3d0EBa4C003816aFdD71022D543e67",
      "txHash": "0x7730e71157b9f0313aab78891c9d01000faf093ab1906645e2b74a8b487ec98c",
      "kind": "transparent"
    },
    {
      "address": "0xea50f120a38D8eBA611A22e140D3582D7C745F3C",
      "txHash": "0x713beb904ed1a180111215429c95c679d335c9d854e9d21a46293c0e9b299d43",
      "kind": "transparent"
    },
    {
      "address": "0x2522Cf1cd6f0051796065e8beF2b22195811638D",
      "txHash": "0xa9dd7e5ce95120e95f0411ff27615bda71422f01f328f4a44e5adb606e8ab353",
      "kind": "transparent"
    },
    {
      "address": "0x79b4fAC0D68B54c2024718b1DAb18BEdeDB3159c",
      "txHash": "0x9cede35c7ca11403970375b99c2b57f40f201b5f1357f0b8497dc285f0c7b482",
      "kind": "transparent"
    },
    {
      "address": "0x43f57eCCD7562d227730F4C794D0B095f0Ff30c9",
      "txHash": "0xcfdfc5398a6b9837e44a92c5fa13a2f781044ac64f3969cfbb4ce96acc99efa0",
      "kind": "transparent"
    },
    {
      "address": "0x99660D97Fc48519B3d399f13c114AD40e8dF1EF9",
      "txHash": "0x1e3b6c6cfe66e73880cac4aa8206cbe6470eb75fa6f471bf245e4a89a78d6aa1",
      "kind": "transparent"
    },
    {
      "address": "0x0C7582b6183fcd9a3a2e68b495dD6ecDa41B9419",
      "txHash": "0x91a5857230497e3c272a3b463d7dbaa1261a84f9cffaef0038f81efc1d660a5c",
      "kind": "transparent"
    },
    {
      "address": "0x2A6e439Ac8801CF9Bd3bD8767d81C5CB50F7Ce20",
      "txHash": "0x1ebbb75fe224052b8cbc855692fc8f1f0aa8ffeea9e2a0957527d36f799f9b73",
      "kind": "transparent"
    },
    {
      "address": "0x8CEa59F826CE97D1926cb5688a4FDeAD1E2FD1b2",
      "txHash": "0x23364aae41e67b2b9779bcb959fffaf2a329a25f04adfd13245e7bee5f1adfd4",
      "kind": "transparent"
    },
    {
      "address": "0xaD334C926267Bc431fA246dd361850810b731c53",
      "txHash": "0xa9debce43d19c288beeeda3b3373ad93a3f302bfbb3d8103884d2069d4bdd4d8",
      "kind": "transparent"
    },
    {
      "address": "0xBD65D0da1293832d7880C2059Af87d817FAb5f83",
      "txHash": "0x8936e140e2856a9a8dec25cebc2477e8060141445e4f062ad0ed1c5085ffa21a",
      "kind": "transparent"
    },
    {
      "address": "0x1aDfa3deD4d30c39d7C9d66a8Be843Dcf4fa9De1",
      "txHash": "0x7ced621ebe8432f9840e1b749b80e3b5122b31caff6d8ebc38cf02c4a1505124",
      "kind": "transparent"
    },
    {
      "address": "0x4030E237677913a6889949C27F2C5eB54A0C51f7",
      "txHash": "0x88036ac1ffb9ee635532efe263d8e24bda77636a198887e91699e76831eb66fa",
      "kind": "transparent"
    },
    {
      "address": "0x76a33A3ba627548b85587E9C6eD4165DB50c25d8",
      "txHash": "0x7f81dd14f81d598cd60ed29b395c0554080e7d10e0cc73b020c6df1523f89db3",
      "kind": "transparent"
    },
    {
      "address": "0x9c061B4791525a3B71F828CcC5ec18c10b2d3e1F",
      "txHash": "0xa289e806ef171f93aabfb3338d88d61ebb62f470802f4f45991bc484b85fc7c2",
      "kind": "transparent"
    },
    {
      "address": "0x69506dd13B6420dbC13dDE8CbE731AD505Cc5319",
      "txHash": "0x2c2794d871729d03c07976e7f7549a246b93538aaebedad14bc8861b25bc7bbc",
      "kind": "transparent"
    },
    {
      "address": "0xF2c99D5589108849c047f313eE568Cc0e45632E6",
      "txHash": "0x3372b6b78b3d25516276b08516b52aeac0f70f1003ae353c6de1a012232773c6",
      "kind": "transparent"
    },
    {
      "address": "0x39e8a4Fd964ce1541873cC3bA779d79CFBD7fbDD",
      "txHash": "0x0aaee3f8abccf75f352beaa3ea9ffded64acae7436ff05564bb093d55ee3454a",
      "kind": "transparent"
    },
    {
      "address": "0x40eB40f51d127D47fBdb3E53b2dD587a2d33b56F",
      "txHash": "0x3e3904beefe877059c8094202b95aa88c4d216e3a4831386b09097030e87a0fb",
      "kind": "transparent"
    },
    {
      "address": "0xBa58CfCCA02D725e637fBF11f7fb3eC5b0fCD746",
      "txHash": "0x8c04bebfe3b6cf33d25d84fa882a755dbc47816e4cad4e016c4e6961722a6057",
      "kind": "transparent"
    },
    {
      "address": "0xfA16e0C7E0187c0743e83B94086713601e8d1173",
      "txHash": "0x305b6684cbd8aeca33ea0dafcae48dfe3423d00f5aeada818e3dce59152363a1",
      "kind": "transparent"
    },
    {
      "address": "0x2123435AEbD54A1a57fF07b516E666fd865b4Cd3",
      "txHash": "0xe7469e71124c2499513b39e45cc276997e4c2b2faafd773b3b7cb5f06bc01465",
      "kind": "transparent"
    },
    {
      "address": "0xAb915Aaf95c32D0C4c0eAc8675fE1618d515D6C8",
      "txHash": "0x65ee76524cf1e0473de0c5c86699809186eb92c1253650954922f79a8274c368",
      "kind": "transparent"
    },
    {
      "address": "0x9aba45a2fB06a13681E43E6f0F9A82A42042b228",
      "txHash": "0xa49d26571ead39a046b696a5b5df9125647fba924752472c2dd2906fa5f64081",
      "kind": "transparent"
    },
    {
      "address": "0xF79507137C296A4a331f9372BA24d76ebF5d58ea",
      "txHash": "0x19e962b17e0433c516ebb78fe811f6c915d7830b0822f28040badd03b5b52298",
      "kind": "transparent"
    },
    {
      "address": "0xE4DC78B553676800760a7a9183ae449240C00485",
      "txHash": "0xb8781fc9746b9b587c09fd81a7f73d54b072685a2f230f7c2172cbae5d434b32",
      "kind": "transparent"
    },
    {
      "address": "0xada51172048aC8d34d5d6d299d4c9aBEeC932035",
      "txHash": "0x16c579142143f5b2c06017a9b14adc2040e36c856dec478f6ef02d0b35a0236d",
      "kind": "transparent"
    },
    {
      "address": "0xe49f6Fe95802c7C9cbDdF5cB8Ff371a96FA294b7",
      "txHash": "0x5d14b931b80a52018d20f143d6a3b8bb19885fa4a35319f1f32f4f68cd1e3810",
      "kind": "transparent"
    },
    {
      "address": "0xEc8bC9D68f691bE5B0dC3bca52BaCEe5523dD711",
      "txHash": "0x19d3ce9ee9ee9571a57273311f9679b046d8ef0eebef128dba62cf7e0090a57a",
      "kind": "transparent"
    },
    {
      "address": "0xCC5654e6711844aca7E62C59cEF6e03A9725667E",
      "txHash": "0x9b0a9ec6b3a25513857f6ef4145247e1496b2496ba7ff8b4856083a5930e854a",
      "kind": "transparent"
    },
    {
      "address": "0xF4C56e5075E68e2990b856f4C50BC0cD7DBB7094",
      "txHash": "0x979e39dfd2a21d6398e7bd8d03a7df5d38c9b5ee41e64b144c37ba0edff6dc99",
      "kind": "transparent"
    },
    {
      "address": "0x9f83c8A80995D7597ac1900441Ffbaa9a4435eDC",
      "txHash": "0xc08feca3e70027bed8be3790563f48474036c781fcfce1808d5d73557398080d",
      "kind": "transparent"
    },
    {
      "address": "0x62481c3ECd27E2A78d8Ee6A03e707Ad231437556",
      "txHash": "0x99b04e35d25c9bb08aa3617de3a427eeb6ddb9418a829e5c21c17e63a506055b",
      "kind": "transparent"
    },
    {
      "address": "0xf687d91b6223c2c645B95450EB82fb89A460135a",
      "txHash": "0x52ba4137ae7160f081121d74e66e2ad1ce179a7eafec27a9f521fc9f39ade04e",
      "kind": "transparent"
    },
    {
      "address": "0x49Caf411075b1fD4302d90A051743Ec3aEEC034c",
      "txHash": "0x7f6739b165fb9f2a51901a4ed87706eadc21bed7018e7777ba4b766d58c6cdbe",
      "kind": "transparent"
    },
    {
      "address": "0x1EcC3200b6132D73627BF65AD60FD9E2Ce8abd22",
      "txHash": "0xdcdcc87c881b98c207853ffa04dced832f0494be2512ecefc5a872b129ed5c34",
      "kind": "transparent"
    },
    {
      "address": "0x68C886354F75923b3F789AA61d9525a4a10d5869",
      "txHash": "0x7730d2435df43922fa27d53772a1910d813b4e133048b949ecc56f72f0e6ea92",
      "kind": "transparent"
    },
    {
      "address": "0x9E7ca5D9DFdFf4E5e9a70c41c0E5f408fCA23105",
      "txHash": "0x136f5fd45ee9741c03493653f477d6447d7179c44f35590e5708ac308c5c372b",
      "kind": "transparent"
    },
    {
      "address": "0xA92Dc6d8598B74486D3c6e05a5328342A9b0E0F0",
      "txHash": "0xd547364bd8ce099c6cf8cc540f2cd19ff44f29c51ed0ce8f5fdb42005317cdfc",
      "kind": "transparent"
    },
    {
      "address": "0x740Ba2751EeC55d432fA96802a1a4bd8a62e4B10",
      "txHash": "0xd695ef1522f9c99972fa341810c9e60f1f5e40f0cadd9737e7f477b37d40d65d",
      "kind": "transparent"
    },
    {
      "address": "0x454d8164D5713e488B172527eE666f862815C361",
      "txHash": "0x3389ba2e1f5c9618c8ca850fdaaa950e07f44792cebb821ab336b2a64fdf2ac2",
      "kind": "transparent"
    },
    {
      "address": "0x8c790c1be604c38ddac418D60E7D48956938cDe1",
      "txHash": "0x2c862f51d6c6e4a7c738d5b708dc13b6c692a4144394fd98cb5d49b5bffbf7f9",
      "kind": "transparent"
    },
    {
      "address": "0x9B0BE88B56A7c76F8957E16E8beb68F96Ea19940",
      "txHash": "0x56a4429eb18be32ec9fad5b457b0a4193aa515bf53ac4d4a907ab8ca8d1a0a8e",
      "kind": "transparent"
    },
    {
      "address": "0xee579f67dF1ca1005c76e3b6cc6EF2318e26b8A7",
      "txHash": "0x6b7672b5a84a5a915bfb1faaedf90665884ed906f9cfa09f3753ff946304a385",
      "kind": "transparent"
    },
    {
      "address": "0x9d4A181E237d6aF3729eAb1C414B2b7906c3ED93",
      "txHash": "0xc3347d5d6f2faa4883e2e43b6259ccfab55287fd132e287bc7c5e75950a1a406",
      "kind": "transparent"
    },
    {
      "address": "0xFE8B6BB6Cdf71cd53624aF8CB1C51807C05a4e96",
      "txHash": "0x4f70c8d70e747544ae8d41c7762c2614ec1a475b047bbed335a4fe3b938f6507",
      "kind": "transparent"
    },
    {
      "address": "0x73cBfBc523AceeA8f74dB354d73ceC65aD32608D",
      "txHash": "0xf9d1b556951adc9329bdfe278e73c228b3c7ddebbad85f8f4d9213854b669ec1",
      "kind": "transparent"
    },
    {
      "address": "0x87B9b17325B7F087b7dFCDADcf21D65d2A6ed73a",
      "txHash": "0xcc3f514f20a9f5235510a109f5f0decb4274683022872997a18301d339fddce8",
      "kind": "transparent"
    },
    {
      "address": "0x2AE7D3506BD1161113eA59B29B654ea786EDebc1",
      "txHash": "0x81e36a6e809c415aabd2ab5e8396602928ea7508443c7744fc28505aeb95c057",
      "kind": "transparent"
    },
    {
      "address": "0x1853443AC1a2aC9f4f7463de683842b325140f00",
      "txHash": "0x893522741dd8a3f7313a673592a913cba0327abcbad0d9b0e258e1596598d046",
      "kind": "transparent"
    },
    {
      "address": "0x003b7fE519e3B29aC756B586536b18e5E8372d4B",
      "txHash": "0x2cd07c0a02d4381381e58afa2b68a4a71fbada22b887b1b8f3dfefe0d04e8df7",
      "kind": "transparent"
    },
    {
      "address": "0x9e4c79dd987F1d798a2D6E7e36C91eC6088ed428",
      "txHash": "0xf24fb0f078894461ac02af836f4295cbd9e6b9bbd2ef7514df26db11c1848ca7",
      "kind": "transparent"
    },
    {
      "address": "0x54F15Cb5C414349E32996f93B8D23447b28B4BC0",
      "txHash": "0x4b2349fabb680547137ce461ecfe5728424732b6f581b68e4db838e1ddfaef0c",
      "kind": "transparent"
    },
    {
      "address": "0xeF2c997B277a6084A0045B69E7f1BA3592F72c2d",
      "txHash": "0x43311b02aeadc3f9e9210a34b39bb39f049fa09e7ce68d8aca97b6dcdda24ca4",
      "kind": "transparent"
    },
    {
      "address": "0x67a9D1af4dff50B90bE989Cb9e15189700ffe87D",
      "txHash": "0x77ea798fc57f64c45a71412cfb6dc869e941c05b8e501c7ce1719754c687f644",
      "kind": "transparent"
    }
  ],
  "impls": {
    "68593e414834ace2f034858e74696ac74c896bbb13edafc2fc1e6267119506b8": {
      "address": "0x51ABE4c4Be5BBdd5511E898acc5B43fA3c5B222f",
      "txHash": "0xaa7317b8d32acb35514d9189fcabb4f40aadaba68ac9a7a7743aae5ac5025b3d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:17"
          },
          {
            "label": "inviTokenStakeAddress",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:18"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:19"
          },
          {
            "label": "regularMintAmount",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:22"
          },
          {
            "label": "mintInterval",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:23"
          },
          {
            "label": "lastMinted",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:24"
          },
          {
            "label": "mintAmountChangeInterval",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:25"
          },
          {
            "label": "lastMintAmountChange",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1aa037b098d8b0d6bdf4f42bd213de01cbaa95a98efd102a2d61f2e98e90ebaf": {
      "address": "0x8bD1E9D1E49e40e2c06743f3282C9B2b2970292E",
      "txHash": "0xb853488de825d7e56230a2c6ec43229ae648ca907ada605800c52acad16c598b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "ILPHolders",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6ace55cf05569453e6ffa9f321d6bf4e5b1d6f2e5e550e2d0262a21ee1f2a044": {
      "address": "0x4955CBd91e588FbD12c2389E86e09A94553ce90f",
      "txHash": "0xf05902be6af4f2fec1de86f5ea8eee19630ab0d6bbe1dddc147dfed32382f140",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviSwapPool",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ISPTToken",
            "src": "contracts\\common\\tokens\\ISPTToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e8bc74b20edacd3295111af5fc8939dfb8606cede64aa6fefe5b3646ed030dd6": {
      "address": "0x827e0809C612eD9bD2ecBb59A69197288289561a",
      "txHash": "0x4b734d2d75b65396e5157ed1b16ab78acc1a141a649ded288789f65eab21c6c7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:26"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:29"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:518"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)3611_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:19"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:23"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:24"
          },
          {
            "label": "NFTOwnership",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:29"
          },
          {
            "label": "rewardAmount",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:30"
          },
          {
            "label": "stakeInfos",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)10358_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:32"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:36"
          },
          {
            "label": "nftTokenIds",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:37"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:41"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "210",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:42"
          },
          {
            "label": "dummyId",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)10358_storage)": {
            "label": "mapping(uint256 => struct StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3611_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(StakeInfo)10358_storage": {
            "label": "struct StakeInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "leverageRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lockEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "isLent",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "61725b3adae306edff048aead4ee0af99dd08a2d5c4755bb68686a351ba6f9e8": {
      "address": "0x1E6fFc802F3267f921E6Ba5371325D5b434172E7",
      "txHash": "0x582228b4e8d81c53c371f02dac984d4542e48859e2d9fab47b2a5a671393434c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)11170",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:15"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:16"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:19"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:20"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:21"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:22"
          },
          {
            "label": "unstakeRequestTime",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:25"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:26"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:27"
          },
          {
            "label": "unstakePeriod",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:28"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:31"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:32"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:33"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:34"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:35"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:36"
          },
          {
            "label": "addressList",
            "offset": 0,
            "slot": "117",
            "type": "t_array(t_address)dyn_storage",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:39"
          },
          {
            "label": "totalAddressNumber",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)11170": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cb1aa1748c28ad1870316b418a034b82573e32bc6983f5a390cc3965f5994df5": {
      "address": "0x7c08C5bDB657E6eEe77b1ba1ca0315423E3936A0",
      "txHash": "0x3331b1d0e3010ce38f3944314269299e84c48f389b04a6e8481735641e648a58",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "iLP",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)11170",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:15"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)11170",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:16"
          },
          {
            "label": "inviCoreContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(InviCore)7551",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:17"
          },
          {
            "label": "ILPHolders",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:18"
          },
          {
            "label": "liquidityAllowableRatio",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:21"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:22"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:23"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:24"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:30"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:31"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:32"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:33"
          },
          {
            "label": "totalNativeRewardAmountByAddress",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:34"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:36"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:37"
          },
          {
            "label": "totalNativeRewardAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:38"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:39"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:40"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)11170": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(InviCore)7551": {
            "label": "contract InviCore",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1646b8d879f5c6f2998353a4c35e94b7b9a61a5a99dd6c9a036b6c5e0b53be6e": {
      "address": "0x7E8bcA54B800E6aB4149ee35a7b0A0E30Dd03d40",
      "txHash": "0x563f99590f06d39d2f658911ee832309e4e21cf27c38cb704ff4d78a10635802",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(InviToken)10733",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:21"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)9841",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:22"
          },
          {
            "label": "priceManager",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(PriceManager)9278",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:23"
          },
          {
            "label": "maxLendRatio",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:25"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:26"
          },
          {
            "label": "lendInfos",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(LendInfo)10369_storage)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:27"
          },
          {
            "label": "nftLentTime",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(InviToken)10733": {
            "label": "contract InviToken",
            "numberOfBytes": "20"
          },
          "t_contract(PriceManager)9278": {
            "label": "contract PriceManager",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)9841": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(LendInfo)10369_storage)": {
            "label": "mapping(uint256 => struct LendInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendInfo)10369_storage": {
            "label": "struct LendInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minLendAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8cbd2410cd8c705d9ad58794c4d63534bb0d7c43599d319e40188b18cb5185e4": {
      "address": "0x54e16c0FD3B07707934a420daa06D188b9427f37",
      "txHash": "0x50036fe332e1b977ee868f15d2c9d19c541d309d24fa4de3683adacbec21e108",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "isptToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)17284",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:20"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)17284",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:21"
          },
          {
            "label": "priceManager",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(PriceManager)14244",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:22"
          },
          {
            "label": "lpLiquidity",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:27"
          },
          {
            "label": "lpRewardNative",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:28"
          },
          {
            "label": "lpRewardInvi",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:29"
          },
          {
            "label": "lpList",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_address)dyn_storage",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:30"
          },
          {
            "label": "totalLiquidityNative",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:32"
          },
          {
            "label": "totalLiquidityInvi",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:33"
          },
          {
            "label": "totalRewardNative",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:34"
          },
          {
            "label": "totalRewardInvi",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:35"
          },
          {
            "label": "inviFees",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:37"
          },
          {
            "label": "nativeFees",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:38"
          },
          {
            "label": "inviPrice",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:40"
          },
          {
            "label": "nativePrice",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)17284": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(PriceManager)14244": {
            "label": "contract PriceManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "088d9f4ae84ce406a43beed41865423c6efac535a39ea01bfd94a4ba0e63f415": {
      "address": "0xe04898b117A997485D2E5170f9b710bccD5Fc44B",
      "txHash": "0xb72627386aff41a52e520139e050fa68d4bba7d36b57c783123ca1563ba7c40d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "stToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)11170",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:19"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)9841",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:20"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(LiquidityProviderPool)9189",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:21"
          },
          {
            "label": "inviTokenStakeContract",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(InviTokenStake)8160",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:22"
          },
          {
            "label": "liquidStakingContract",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(ILiquidStaking)11275",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:23"
          },
          {
            "label": "stakingAPR",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:32"
          },
          {
            "label": "decreaseRatio",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:33"
          },
          {
            "label": "increaseRatio",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:34"
          },
          {
            "label": "lpPoolRewardPortion",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:35"
          },
          {
            "label": "inviTokenStakeRewardPortion",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:36"
          },
          {
            "label": "userStakedAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:39"
          },
          {
            "label": "latestStakeBlock",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:40"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "113",
            "type": "t_array(t_struct(UnstakeRequest)10385_storage)dyn_storage",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:43"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:44"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:45"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:46"
          },
          {
            "label": "requireTransferAmount",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:47"
          },
          {
            "label": "nftUnstakeTime",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:48"
          },
          {
            "label": "claimableAmount",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:49"
          },
          {
            "label": "slippage",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:53"
          },
          {
            "label": "userList",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_address)dyn_storage",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:54"
          },
          {
            "label": "lastStTokenDistributeTime",
            "offset": 0,
            "slot": "122",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:55"
          },
          {
            "label": "lastSendUnstakedAmountTime",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(UnstakeRequest)10385_storage)dyn_storage": {
            "label": "struct UnstakeRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)11170": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILiquidStaking)11275": {
            "label": "contract ILiquidStaking",
            "numberOfBytes": "20"
          },
          "t_contract(InviTokenStake)8160": {
            "label": "contract InviTokenStake",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityProviderPool)9189": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)9841": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)10385_storage": {
            "label": "struct UnstakeRequest",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requestType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8eb2344b232470cbafc7a693128530f2f684a04a53ac410710b46fbc0fc179be": {
      "address": "0x53c433193b42B2B3A2D2FF63c8B0de3B6B204905",
      "txHash": "0xed70ec5c7d703409375e90cc031eb39074fc410fac59640471af94a5b104230d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "pangeaSwapPool",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IConcentratedLiquidityPool)11082",
            "contract": "PriceManager",
            "src": "contracts\\common\\PriceManager.sol:19"
          },
          {
            "label": "inviPrice",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "PriceManager",
            "src": "contracts\\common\\PriceManager.sol:22"
          },
          {
            "label": "nativePrice",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "PriceManager",
            "src": "contracts\\common\\PriceManager.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IConcentratedLiquidityPool)11082": {
            "label": "contract IConcentratedLiquidityPool",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5cab04b270b43f171c740d67623e44b7b81ed7a299e081516bd075ba24aaabea": {
      "address": "0x07341dDD95262AA9eA8816fA0DbC42d6eF9bc495",
      "txHash": "0xb0a3d2970cffb0e34c7d47c423b032e0ed5b0520f27cb2b506a7387a7aa019c1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "stToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)16203",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:19"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)14872",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:20"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(LiquidityProviderPool)14220",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:21"
          },
          {
            "label": "inviTokenStakeContract",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(InviTokenStake)13191",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:22"
          },
          {
            "label": "liquidStakingContract",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(ILiquidStaking)16350",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:23"
          },
          {
            "label": "stakingAPR",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:32"
          },
          {
            "label": "decreaseRatio",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:33"
          },
          {
            "label": "increaseRatio",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:34"
          },
          {
            "label": "lpPoolRewardPortion",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:35"
          },
          {
            "label": "inviTokenStakeRewardPortion",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:36"
          },
          {
            "label": "userStakedAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:39"
          },
          {
            "label": "latestStakeBlock",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:40"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "113",
            "type": "t_array(t_struct(UnstakeRequest)15418_storage)dyn_storage",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:43"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:44"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:45"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:46"
          },
          {
            "label": "requireTransferAmount",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:47"
          },
          {
            "label": "nftUnstakeTime",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:48"
          },
          {
            "label": "claimableAmount",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:49"
          },
          {
            "label": "slippage",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:53"
          },
          {
            "label": "userList",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_address)dyn_storage",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:54"
          },
          {
            "label": "lastStTokenDistributeTime",
            "offset": 0,
            "slot": "122",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:55"
          },
          {
            "label": "lastSendUnstakedAmountTime",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(UnstakeRequest)15418_storage)dyn_storage": {
            "label": "struct UnstakeRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)16203": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILiquidStaking)16350": {
            "label": "contract ILiquidStaking",
            "numberOfBytes": "20"
          },
          "t_contract(InviTokenStake)13191": {
            "label": "contract InviTokenStake",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityProviderPool)14220": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)14872": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)15418_storage": {
            "label": "struct UnstakeRequest",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requestType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "765638336358a57c3be741644dfad48dc4238fae2905ef152ed1016c4fe6fd6a": {
      "address": "0x520030dB6443e038EaE5e847f98b35f9220f7D8E",
      "txHash": "0xa05e54138ff1916b9640358e4749e7ea68effb756edc23885d94450828065d3c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)8795",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:15"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:16"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:19"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:20"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:21"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:22"
          },
          {
            "label": "unstakeRequestTime",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:25"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:26"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:27"
          },
          {
            "label": "unstakePeriod",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:28"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:31"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:32"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:33"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:34"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:35"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:36"
          },
          {
            "label": "addressList",
            "offset": 0,
            "slot": "117",
            "type": "t_array(t_address)dyn_storage",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:39"
          },
          {
            "label": "totalAddressNumber",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)8795": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23e302a0ea0ea3856bf9663b7dc4ca5894fc0bc46ee644b87485f0023f9092d5": {
      "address": "0x6E78e882d58D088B46F3E951f94a5F07918c2bc1",
      "txHash": "0x3374c2d5bf8e9b4090a4ede0fd1acbf6cf1fae98cc140797e852e51405efb7f6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "stToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)8795",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:28"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)7506",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:29"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(LiquidityProviderPool)6854",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:30"
          },
          {
            "label": "inviTokenStakeContract",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(InviTokenStake)5825",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:31"
          },
          {
            "label": "liquidStakingContract",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(ILiquidStaking)8897",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:32"
          },
          {
            "label": "networkId",
            "offset": 20,
            "slot": "105",
            "type": "t_uint8",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:33"
          },
          {
            "label": "stakingAPR",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:42"
          },
          {
            "label": "decreaseRatio",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:43"
          },
          {
            "label": "increaseRatio",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:44"
          },
          {
            "label": "lpPoolRewardPortion",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:45"
          },
          {
            "label": "inviTokenStakeRewardPortion",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:46"
          },
          {
            "label": "userStakedAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:49"
          },
          {
            "label": "latestStakeBlock",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:50"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "113",
            "type": "t_array(t_struct(UnstakeRequest)8052_storage)dyn_storage",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:53"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:54"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:55"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:56"
          },
          {
            "label": "requireTransferAmount",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:57"
          },
          {
            "label": "nftUnstakeTime",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:58"
          },
          {
            "label": "claimableAmount",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:59"
          },
          {
            "label": "slippage",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:63"
          },
          {
            "label": "userList",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_address)dyn_storage",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:64"
          },
          {
            "label": "lastStTokenDistributeTime",
            "offset": 0,
            "slot": "122",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:65"
          },
          {
            "label": "lastSendUnstakedAmountTime",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(UnstakeRequest)8052_storage)dyn_storage": {
            "label": "struct UnstakeRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)8795": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILiquidStaking)8897": {
            "label": "contract ILiquidStaking",
            "numberOfBytes": "20"
          },
          "t_contract(InviTokenStake)5825": {
            "label": "contract InviTokenStake",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityProviderPool)6854": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)7506": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)8052_storage": {
            "label": "struct UnstakeRequest",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requestType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "948f3ad3cd2ef5b9f02c3d639b24ba3a84b2cd6e030f8702260c148e88177186": {
      "address": "0x59623a256B3c3068Bf73b830AA8D3d7db3d705A5",
      "txHash": "0x5d259fd6bcb36bc50562abd652f3c3aa45abfd9c8142f9c762678327a18c5d2b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:15"
          },
          {
            "label": "inviTokenStakeAddress",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:16"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:17"
          },
          {
            "label": "inviSwapPoolAddress",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:18"
          },
          {
            "label": "regularMintAmount",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:21"
          },
          {
            "label": "mintInterval",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:22"
          },
          {
            "label": "lastMinted",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:23"
          },
          {
            "label": "mintAmountChangeInterval",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:24"
          },
          {
            "label": "lastMintAmountChange",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "96d41f2769b8aa7f352bcdd769bfb186f631beca5ff67da0bcb6f643088f4b9e": {
      "address": "0xba8C0801215B4c4cF6029fA1620b5D8A930B795f",
      "txHash": "0x3ca445eefd232bacd86d8b3d284bffefd7fdecde0a423840e7cd3634199c48b6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:15"
          },
          {
            "label": "totalILPHoldersCount",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:16"
          },
          {
            "label": "ILPHolders",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3f80c35221aff16bb1092eb73d4ec8c72f074b82fadc521d6ea0a951cc06599a": {
      "address": "0x4CeBC1d1cd22CF1cCa5e04e117e144f68667C94c",
      "txHash": "0xa5e8ada82ae915346cfb536d8a3cb061aa21d027e1fc14abf89815adde150d55",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviSwapPool",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ISPTToken",
            "src": "contracts\\common\\tokens\\ISPTToken.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f2ef8c196338c0481ad7b92db6857862ab567880f8d4212ddb1fdadfe842215": {
      "address": "0x544D76d3EA28658ebC96f064459c8073084252c5",
      "txHash": "0x896514b0ff1a7a4ae76893450690d5fa1809728c28fd8f3dfb3031f581a669ea",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:26"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:29"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:518"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:24"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:25"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:26"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:31"
          },
          {
            "label": "nftTokenIds",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint32,t_uint32)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:33"
          },
          {
            "label": "NFTOwnership",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_array(t_uint32)dyn_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:34"
          },
          {
            "label": "rewardAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:35"
          },
          {
            "label": "stakeInfos",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint32,t_struct(StakeInfo)8589_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:36"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:39"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "210",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:40"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "211",
            "type": "t_uint32",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(address => uint32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(StakeInfo)8589_storage)": {
            "label": "mapping(uint32 => struct StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(StakeInfo)8589_storage": {
            "label": "struct StakeInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "originalLeverageRatio",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "leverageRatio",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lockStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isLent",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2b1238299022108af445a0ff1389d555fd3b88a49f1e78c99435d791aba89631": {
      "address": "0xfbE359Ce0b8e7635B31F41c05def51871aDc8ECc",
      "txHash": "0x6d8604a02c5d62eeebc0cd6372c10a8f8596eb34252825cc46794a8100bbdf4b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)9593",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:13"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:14"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:17"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:18"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:19"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:20"
          },
          {
            "label": "unstakeRequestTime",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:23"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:24"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:25"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:26"
          },
          {
            "label": "unstakePeriod",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:27"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:30"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:31"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:32"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:33"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:34"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:35"
          },
          {
            "label": "totalAddressNumber",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:38"
          },
          {
            "label": "addressList",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)9593": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "42885c16cb01f3ce985f7ae9ac89c5b7e9bbe052b2f07bfd4b3d194ba8bd6e75": {
      "address": "0x74DbCbE8d99f2448c17cC48fE6421BAEf27Ef2AE",
      "txHash": "0xfec23b8e7bc69c1c819c0abccc32e04afc975fe92da4969751c0d580acc6cd1d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "iLP",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILPToken)8866",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:22"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)9593",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:23"
          },
          {
            "label": "inviCoreContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(InviCore)5170",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:24"
          },
          {
            "label": "stakeNFT",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(StakeNFT)8098",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:25"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:28"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:29"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:30"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:31"
          },
          {
            "label": "totalNativeRewardAmountByAddress",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:32"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:33"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:34"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_struct(UnstakeRequestLP)8623_storage)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:35"
          },
          {
            "label": "liquidityAllowableRatio",
            "offset": 0,
            "slot": "113",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:38"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 4,
            "slot": "113",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:40"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 8,
            "slot": "113",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:41"
          },
          {
            "label": "unstakedAmount",
            "offset": 12,
            "slot": "113",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:43"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:44"
          },
          {
            "label": "totalLentAmount",
            "offset": 16,
            "slot": "114",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:45"
          },
          {
            "label": "totalNativeRewardAmount",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:46"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 16,
            "slot": "115",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:47"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:48"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:50"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:51"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:52"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:53"
          },
          {
            "label": "lastSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "121",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)9593": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILPToken)8866": {
            "label": "contract ILPToken",
            "numberOfBytes": "20"
          },
          "t_contract(InviCore)5170": {
            "label": "contract InviCore",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8098": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UnstakeRequestLP)8623_storage)": {
            "label": "mapping(uint256 => struct UnstakeRequestLP)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequestLP)8623_storage": {
            "label": "struct UnstakeRequestLP",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0213905fb8658ba1c6cb0cd91577f5870c8d7cc8fc406feee409eefc1ecafe2d": {
      "address": "0x2FBc1d9b88E814120bf69436235D16fF9426C388",
      "txHash": "0x70f034ff167ff5a1eb58ab48d6dedfc95e1eb8154d6504dd9f514a886ca61ff1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(InviToken)9187",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:19"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)8098",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:20"
          },
          {
            "label": "priceManager",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(PriceManager)7320",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:21"
          },
          {
            "label": "maxLendRatio",
            "offset": 20,
            "slot": "103",
            "type": "t_uint32",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:23"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:24"
          },
          {
            "label": "lendInfos",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(LendInfo)8600_storage)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:25"
          },
          {
            "label": "nftLentTime",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(InviToken)9187": {
            "label": "contract InviToken",
            "numberOfBytes": "20"
          },
          "t_contract(PriceManager)7320": {
            "label": "contract PriceManager",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8098": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(LendInfo)8600_storage)": {
            "label": "mapping(uint256 => struct LendInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendInfo)8600_storage": {
            "label": "struct LendInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLendAmount",
                "type": "t_uint256",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "lentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "424b3ad7ff01145119167e15307fba4d7c544e2fa1c34f4e4a97c71fd675846a": {
      "address": "0xf7F6E8b35472A7601Aa88d0791e2Fd2B5DB8C3a3",
      "txHash": "0x910024d95c3627aec7006fda2b11881533dd709df578f0398e73e756868903e9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "isptToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)10693",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:19"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)10693",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:20"
          },
          {
            "label": "priceManager",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(PriceManager)7264",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:21"
          },
          {
            "label": "lpLiquidity",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:26"
          },
          {
            "label": "lpRewardNative",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:27"
          },
          {
            "label": "lpRewardInvi",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:28"
          },
          {
            "label": "lpList",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:30"
          },
          {
            "label": "lpCount",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:32"
          },
          {
            "label": "totalLiquidityNative",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:33"
          },
          {
            "label": "totalLiquidityInvi",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:34"
          },
          {
            "label": "totalRewardNative",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:35"
          },
          {
            "label": "totalRewardInvi",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:36"
          },
          {
            "label": "inviFees",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:38"
          },
          {
            "label": "nativeFees",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:39"
          },
          {
            "label": "inviPrice",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:41"
          },
          {
            "label": "nativePrice",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)10693": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(PriceManager)7264": {
            "label": "contract PriceManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34ee593b6712877e4454fc2f3aeba69d11a83bc85139605a74763e749bd443ee": {
      "address": "0x4F1dA8B73e3E260C9a0ed2eB712aD89181cafb96",
      "txHash": "0x8a96db6ed9667ced618cf5f5db1696d56e7e2a95f3c105bd1675b0dc14885807",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "stToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)9593",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:29"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)8098",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:30"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(LiquidityProviderPool)7235",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:31"
          },
          {
            "label": "inviTokenStakeContract",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(InviTokenStake)5901",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:32"
          },
          {
            "label": "liquidStakingContract",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(ILiquidStaking)9695",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:33"
          },
          {
            "label": "networkId",
            "offset": 20,
            "slot": "105",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:34"
          },
          {
            "label": "lpPoolRewardPortion",
            "offset": 24,
            "slot": "105",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:37"
          },
          {
            "label": "inviTokenStakeRewardPortion",
            "offset": 28,
            "slot": "105",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:38"
          },
          {
            "label": "totalNFTRewards",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:39"
          },
          {
            "label": "stakingAPR",
            "offset": 16,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:41"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 20,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:43"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 24,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:44"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:45"
          },
          {
            "label": "slippage",
            "offset": 16,
            "slot": "107",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:47"
          },
          {
            "label": "totalClaimableAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:48"
          },
          {
            "label": "lastStTokenDistributeTime",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:49"
          },
          {
            "label": "lastClaimAndSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:50"
          },
          {
            "label": "stTokenDistributePeriod",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:51"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint32,t_struct(UnstakeRequest)8616_storage)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:53"
          },
          {
            "label": "claimableAmount",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)9593": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILiquidStaking)9695": {
            "label": "contract ILiquidStaking",
            "numberOfBytes": "20"
          },
          "t_contract(InviTokenStake)5901": {
            "label": "contract InviTokenStake",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityProviderPool)7235": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8098": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(UnstakeRequest)8616_storage)": {
            "label": "mapping(uint32 => struct UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)8616_storage": {
            "label": "struct UnstakeRequest",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestType",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eb287c6c0e7a2c5eb14f426610553bfbaed266c011a6b705ec81ae267ceea3e4": {
      "address": "0xaB858860d41Fe96ECCCb9675278B0602EB176888",
      "txHash": "0xad7d638b6e84a7a5234d24807083c75c03c36d221a860f86b12c5272a8e38940",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviPrice",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "PriceManager",
            "src": "contracts\\common\\PriceManager.sol:18"
          },
          {
            "label": "nativePrice",
            "offset": 16,
            "slot": "101",
            "type": "t_uint256",
            "contract": "PriceManager",
            "src": "contracts\\common\\PriceManager.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "121fce682cf76efa615d0bb8bc929b1466a7a67c27290b0681b4ea30de392a37": {
      "address": "0x1A902c0578BD554153bEaA8cCac57c575Ab4d195",
      "txHash": "0x31a096e9c338a2e6b0a76bb7cdbe0eb727f3ae698a8e58a38ac3a97892f0295c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_setLendingPoolAddress",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:15"
          },
          {
            "label": "_setInviTokenStakeAddress",
            "offset": 1,
            "slot": "151",
            "type": "t_bool",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:16"
          },
          {
            "label": "_setLpPoolAddress",
            "offset": 2,
            "slot": "151",
            "type": "t_bool",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:17"
          },
          {
            "label": "_setInviSwapPoolAddress",
            "offset": 3,
            "slot": "151",
            "type": "t_bool",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:18"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 4,
            "slot": "151",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:21"
          },
          {
            "label": "inviTokenStakeAddress",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:22"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:23"
          },
          {
            "label": "inviSwapPoolAddress",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:24"
          },
          {
            "label": "regularMintAmount",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:27"
          },
          {
            "label": "mintInterval",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:28"
          },
          {
            "label": "lastMinted",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:29"
          },
          {
            "label": "mintAmountChangeInterval",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:30"
          },
          {
            "label": "lastMintAmountChange",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3a267a63c63041e377a19919debf37c390f560e1a5f60a24d07471b202aec6be": {
      "address": "0xDeDa3629c56874821C7DB74b39a6C74277e06007",
      "txHash": "0x8b55bea302b9e725a28a3976568f5b20a41542f510f7793b16ef382189c72a62",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(LiquidityProviderPool)7649",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:15"
          },
          {
            "label": "ILPHolders",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:16"
          },
          {
            "label": "totalILPHoldersCount",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:17"
          },
          {
            "label": "_setLpPoolContract",
            "offset": 16,
            "slot": "153",
            "type": "t_bool",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(LiquidityProviderPool)7649": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7d38495ed48acf46db2bae608404262dddf0e579e1415c81344a6d76ef48d5ea": {
      "address": "0xcB65E6423cF0C07DeE8255a4DC706EB1409E5AD3",
      "txHash": "0x1f63335293026a1cfc7d6cbb6d1d162100e9a1a9ad82140fa539834695198e88",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:26"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:29"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:518"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:23"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:24"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:25"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:28"
          },
          {
            "label": "nftTokenIds",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint32,t_uint32)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:30"
          },
          {
            "label": "NFTOwnership",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_array(t_uint32)dyn_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:31"
          },
          {
            "label": "rewardAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:32"
          },
          {
            "label": "stakeInfos",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint32,t_struct(StakeInfo)9003_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:33"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:36"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "210",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:37"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "211",
            "type": "t_uint32",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(address => uint32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(StakeInfo)9003_storage)": {
            "label": "mapping(uint32 => struct StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(StakeInfo)9003_storage": {
            "label": "struct StakeInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "originalLeverageRatio",
                "type": "t_uint32",
                "offset": 16,
                "slot": "5"
              },
              {
                "label": "leverageRatio",
                "type": "t_uint32",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "isLent",
                "type": "t_bool",
                "offset": 24,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a26938ae3d61b55f0d2dca58fcd52dab73478d1165b114cadfd428a8ce9c6b33": {
      "address": "0x65FCddCe8a7EE6C4634FafA68252f664db430945",
      "txHash": "0x77846174ff3738161281fe27705d313d915e8ef145ce8059c89b52c8aed2e521",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)10229",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:12"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:13"
          },
          {
            "label": "_locked",
            "offset": 20,
            "slot": "102",
            "type": "t_bool",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:15"
          },
          {
            "label": "_setInviTokenAddress",
            "offset": 21,
            "slot": "102",
            "type": "t_bool",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:16"
          },
          {
            "label": "_setInvicoreAddress",
            "offset": 22,
            "slot": "102",
            "type": "t_bool",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:17"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:20"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:21"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:22"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:23"
          },
          {
            "label": "minStakeAmount",
            "offset": 16,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:24"
          },
          {
            "label": "unstakeRequestTime",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:27"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:28"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:29"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:30"
          },
          {
            "label": "unstakePeriod",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:31"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:34"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:35"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:36"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:37"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:38"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:39"
          },
          {
            "label": "totalAddressNumber",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:42"
          },
          {
            "label": "addressList",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)10229": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "790328b16b8ecaddaaa642cc19fee6cf8e15f97eef7dd25cbaf334ade83a2add": {
      "address": "0x57B50E6A1c58B75b4e2e3d206Fc20D933a13CEf5",
      "txHash": "0xad9454ebca7ddcc3205cd0e964ac5d7d0421919a5e9736c5316109f1caf567fa",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "iLP",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILPToken)9455",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:21"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)10229",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:22"
          },
          {
            "label": "inviCoreContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(InviCore)5215",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:23"
          },
          {
            "label": "stakeNFT",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(StakeNFT)8516",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:24"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:27"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:28"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:29"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:30"
          },
          {
            "label": "totalNativeRewardAmountByAddress",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:31"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:32"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:33"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_struct(UnstakeRequestLP)9037_storage)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:34"
          },
          {
            "label": "liquidityAllowableRatio",
            "offset": 0,
            "slot": "113",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:37"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 4,
            "slot": "113",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:39"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 8,
            "slot": "113",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:40"
          },
          {
            "label": "unstakedAmount",
            "offset": 12,
            "slot": "113",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:42"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:43"
          },
          {
            "label": "totalStakedAmount",
            "offset": 16,
            "slot": "114",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:44"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:45"
          },
          {
            "label": "totalNativeRewardAmount",
            "offset": 16,
            "slot": "115",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:46"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:47"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 16,
            "slot": "116",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:48"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:50"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:51"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:52"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:53"
          },
          {
            "label": "lastSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "121",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:54"
          },
          {
            "label": "totalUnstakeRequestAmount",
            "offset": 0,
            "slot": "122",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:55"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "123",
            "type": "t_bool",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)10229": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILPToken)9455": {
            "label": "contract ILPToken",
            "numberOfBytes": "20"
          },
          "t_contract(InviCore)5215": {
            "label": "contract InviCore",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8516": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UnstakeRequestLP)9037_storage)": {
            "label": "mapping(uint256 => struct UnstakeRequestLP)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequestLP)9037_storage": {
            "label": "struct UnstakeRequestLP",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "62e7be3b4b7462e70b8e00409db375fc0b2351f163a8440b24af444e7c140ab2": {
      "address": "0x9a5C043c73Df3Aa7591098833BBB097015754CaF",
      "txHash": "0x6ecc3d17f210238ce1024f931aa16f2330e129e5687667e3ecde86690ad9abf4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(InviToken)9822",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:19"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)8516",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:20"
          },
          {
            "label": "priceManager",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(PriceManager)7734",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:21"
          },
          {
            "label": "maxLendRatio",
            "offset": 20,
            "slot": "103",
            "type": "t_uint32",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:23"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:24"
          },
          {
            "label": "lendInfos",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(LendInfo)9014_storage)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:25"
          },
          {
            "label": "nftLentTime",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:26"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:28"
          },
          {
            "label": "_setPriceManager",
            "offset": 1,
            "slot": "107",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:29"
          },
          {
            "label": "_locked",
            "offset": 2,
            "slot": "107",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(InviToken)9822": {
            "label": "contract InviToken",
            "numberOfBytes": "20"
          },
          "t_contract(PriceManager)7734": {
            "label": "contract PriceManager",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8516": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(LendInfo)9014_storage)": {
            "label": "mapping(uint256 => struct LendInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendInfo)9014_storage": {
            "label": "struct LendInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLendAmount",
                "type": "t_uint256",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "lentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 16,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8c787a9e35a6c41718a4ad883e1d4c46f014739067498ad8116b2c5915fed29e": {
      "address": "0x613D5cF14FB8a1EE346cdb418d20922D7Ab56468",
      "txHash": "0x0db455240fdbbc94c166de621b3c257c6a7d6c3427c8cdcb72f905831a5d9554",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "stToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)10229",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:28"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)8516",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:29"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(LiquidityProviderPool)7649",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:30"
          },
          {
            "label": "inviTokenStakeContract",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(InviTokenStake)6086",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:31"
          },
          {
            "label": "liquidStakingContract",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(ILiquidStaking)10331",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:32"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 20,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:34"
          },
          {
            "label": "_setLpPoolContract",
            "offset": 21,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:35"
          },
          {
            "label": "_setInviTokenStakeContract",
            "offset": 22,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:36"
          },
          {
            "label": "_locked",
            "offset": 23,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:37"
          },
          {
            "label": "_networkId",
            "offset": 24,
            "slot": "105",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:38"
          },
          {
            "label": "lpPoolRewardPortion",
            "offset": 28,
            "slot": "105",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:41"
          },
          {
            "label": "inviTokenStakeRewardPortion",
            "offset": 0,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:42"
          },
          {
            "label": "totalNFTRewards",
            "offset": 4,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:43"
          },
          {
            "label": "stakingAPR",
            "offset": 20,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:45"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:46"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 16,
            "slot": "107",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:48"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 20,
            "slot": "107",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:49"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:50"
          },
          {
            "label": "slippage",
            "offset": 16,
            "slot": "108",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:52"
          },
          {
            "label": "totalClaimableAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:53"
          },
          {
            "label": "lastStTokenDistributeTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:54"
          },
          {
            "label": "lastClaimAndSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:55"
          },
          {
            "label": "stTokenDistributePeriod",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:56"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint32,t_struct(UnstakeRequest)9030_storage)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:59"
          },
          {
            "label": "claimableAmount",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)10229": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILiquidStaking)10331": {
            "label": "contract ILiquidStaking",
            "numberOfBytes": "20"
          },
          "t_contract(InviTokenStake)6086": {
            "label": "contract InviTokenStake",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityProviderPool)7649": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8516": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(UnstakeRequest)9030_storage)": {
            "label": "mapping(uint32 => struct UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)9030_storage": {
            "label": "struct UnstakeRequest",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "requestType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "416531db3195389666023b34a45df4ffed1456542143ee76a18ef361dffb856e": {
      "address": "0x874777Cc645510b0CF1C40eC4030ed43Cc765112",
      "txHash": "0xe3a0700b3bdef4d5be29d5837cfc09f7293c883dc8b6a318539788f80d19f6ab",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:26"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:29"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:518"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:23"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:24"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:25"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:28"
          },
          {
            "label": "nftTokenIds",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint32,t_uint32)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:30"
          },
          {
            "label": "NFTOwnership",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_array(t_uint32)dyn_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:31"
          },
          {
            "label": "rewardAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:32"
          },
          {
            "label": "stakeInfos",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint32,t_struct(StakeInfo)9044_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:33"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:36"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "210",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:37"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "211",
            "type": "t_uint32",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(address => uint32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(StakeInfo)9044_storage)": {
            "label": "mapping(uint32 => struct StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(StakeInfo)9044_storage": {
            "label": "struct StakeInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "originalLeverageRatio",
                "type": "t_uint32",
                "offset": 16,
                "slot": "5"
              },
              {
                "label": "leverageRatio",
                "type": "t_uint32",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "isLent",
                "type": "t_bool",
                "offset": 24,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fe59aef63e1d10b42a09530366aebb619321f4519e41f33a2849e3b026a08045": {
      "address": "0x8c924CE0FE72A40aF3e6F44E049AfF166f19E51a",
      "txHash": "0x4cc093276c4939b5c83559c0387a7eba551b77e78a33c9993ce1df35c199461d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "iLP",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILPToken)9494",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:21"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)10268",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:22"
          },
          {
            "label": "inviCoreContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(InviCore)5229",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:23"
          },
          {
            "label": "stakeNFT",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(StakeNFT)8557",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:24"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:27"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:28"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:29"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:30"
          },
          {
            "label": "totalNativeRewardAmountByAddress",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:31"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:32"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:33"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_struct(UnstakeRequestLP)9076_storage)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:34"
          },
          {
            "label": "liquidityAllowableRatio",
            "offset": 0,
            "slot": "113",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:37"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 4,
            "slot": "113",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:39"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 8,
            "slot": "113",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:40"
          },
          {
            "label": "unstakedAmount",
            "offset": 12,
            "slot": "113",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:42"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:43"
          },
          {
            "label": "totalStakedAmount",
            "offset": 16,
            "slot": "114",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:44"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:45"
          },
          {
            "label": "totalNativeRewardAmount",
            "offset": 16,
            "slot": "115",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:46"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:47"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 16,
            "slot": "116",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:48"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:50"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:51"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:52"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:53"
          },
          {
            "label": "lastSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "121",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:54"
          },
          {
            "label": "totalUnstakeRequestAmount",
            "offset": 0,
            "slot": "122",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:55"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "123",
            "type": "t_bool",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)10268": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILPToken)9494": {
            "label": "contract ILPToken",
            "numberOfBytes": "20"
          },
          "t_contract(InviCore)5229": {
            "label": "contract InviCore",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8557": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UnstakeRequestLP)9076_storage)": {
            "label": "mapping(uint256 => struct UnstakeRequestLP)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequestLP)9076_storage": {
            "label": "struct UnstakeRequestLP",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a96e5c4a3308e493deba65b035863cbd04943f86b510036340ecf0f0bbfd9827": {
      "address": "0x0CAD2320890747B42723aCc09A24Eb5502324119",
      "txHash": "0x7ceac79f5c7b249db712428922af75d65d5c9273ddd12bb3967f0115e2a7ebf5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(InviToken)9861",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:19"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)8557",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:20"
          },
          {
            "label": "priceManager",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(PriceManager)7751",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:21"
          },
          {
            "label": "maxLendRatio",
            "offset": 20,
            "slot": "103",
            "type": "t_uint32",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:23"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:24"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 16,
            "slot": "104",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:25"
          },
          {
            "label": "_setPriceManager",
            "offset": 17,
            "slot": "104",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:26"
          },
          {
            "label": "_locked",
            "offset": 18,
            "slot": "104",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:27"
          },
          {
            "label": "lendInfos",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(LendInfo)9053_storage)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:28"
          },
          {
            "label": "nftLentTime",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(InviToken)9861": {
            "label": "contract InviToken",
            "numberOfBytes": "20"
          },
          "t_contract(PriceManager)7751": {
            "label": "contract PriceManager",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8557": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(LendInfo)9053_storage)": {
            "label": "mapping(uint256 => struct LendInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendInfo)9053_storage": {
            "label": "struct LendInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lentAmount",
                "type": "t_uint256",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "771b2adb8bdbf1e2d9eca5dfede32b5a9b9ec5df461e61f3abbd17ff001f308f": {
      "address": "0xf0c449d42C88bEebf26DeA09b39c219b486eD9e2",
      "txHash": "0x9cc9ab71194c0e8367c65bdd4a3e508155d62582b6c5ca0778b9341d265c8807",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "stToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)10268",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:28"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)8557",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:29"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(LiquidityProviderPool)7666",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:30"
          },
          {
            "label": "inviTokenStakeContract",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(InviTokenStake)6100",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:31"
          },
          {
            "label": "liquidStakingContract",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(ILiquidStaking)10370",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:32"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 20,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:34"
          },
          {
            "label": "_setLpPoolContract",
            "offset": 21,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:35"
          },
          {
            "label": "_setInviTokenStakeContract",
            "offset": 22,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:36"
          },
          {
            "label": "_locked",
            "offset": 23,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:37"
          },
          {
            "label": "_networkId",
            "offset": 24,
            "slot": "105",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:38"
          },
          {
            "label": "lpPoolRewardPortion",
            "offset": 28,
            "slot": "105",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:41"
          },
          {
            "label": "inviTokenStakeRewardPortion",
            "offset": 0,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:42"
          },
          {
            "label": "totalNFTRewards",
            "offset": 4,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:43"
          },
          {
            "label": "stakingAPR",
            "offset": 20,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:45"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:46"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 16,
            "slot": "107",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:48"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 20,
            "slot": "107",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:49"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:50"
          },
          {
            "label": "slippage",
            "offset": 16,
            "slot": "108",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:52"
          },
          {
            "label": "totalClaimableAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:53"
          },
          {
            "label": "lastStTokenDistributeTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:54"
          },
          {
            "label": "lastClaimAndSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:55"
          },
          {
            "label": "stTokenDistributePeriod",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:56"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint32,t_struct(UnstakeRequest)9069_storage)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:59"
          },
          {
            "label": "claimableAmount",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)10268": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILiquidStaking)10370": {
            "label": "contract ILiquidStaking",
            "numberOfBytes": "20"
          },
          "t_contract(InviTokenStake)6100": {
            "label": "contract InviTokenStake",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityProviderPool)7666": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8557": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(UnstakeRequest)9069_storage)": {
            "label": "mapping(uint32 => struct UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)9069_storage": {
            "label": "struct UnstakeRequest",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "requestType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ab94b60c365d23fe554d50a0cece0206c53bcc96b5f59079a1049c581d52d924": {
      "address": "0x301a8C91a31dB4FA8B5bbbC673aa0b39186537fa",
      "txHash": "0x8ca8990b79c09fd747ffb83a49be60f7f1b65ce6661cb21ed1c9b7ab260d45fb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:26"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:29"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:518"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:23"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:24"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:25"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:28"
          },
          {
            "label": "nftTokenIds",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint32,t_uint32)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:30"
          },
          {
            "label": "NFTOwnership",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_array(t_uint32)dyn_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:31"
          },
          {
            "label": "rewardAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:32"
          },
          {
            "label": "stakeInfos",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint32,t_struct(StakeInfo)9058_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:33"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:36"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "210",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:37"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "211",
            "type": "t_uint32",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(address => uint32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(StakeInfo)9058_storage)": {
            "label": "mapping(uint32 => struct StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(StakeInfo)9058_storage": {
            "label": "struct StakeInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "originalLeverageRatio",
                "type": "t_uint32",
                "offset": 16,
                "slot": "5"
              },
              {
                "label": "leverageRatio",
                "type": "t_uint32",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "isLent",
                "type": "t_bool",
                "offset": 24,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5e23efa18846ea088d88ca4a1a3673d324cf244e78a8a46cd854441e21c03982": {
      "address": "0xda045e9Fc58Bee0d75B55a992A9c1109840e5f78",
      "txHash": "0xb862470ebf76b28c427c913b2a4271176665fa3e8950b5e7475e5cb2f6b71c9e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(InviToken)9875",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:19"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)8571",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:20"
          },
          {
            "label": "priceManager",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(PriceManager)7779",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:21"
          },
          {
            "label": "maxLendRatio",
            "offset": 20,
            "slot": "103",
            "type": "t_uint32",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:23"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:24"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 16,
            "slot": "104",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:25"
          },
          {
            "label": "_setPriceManager",
            "offset": 17,
            "slot": "104",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:26"
          },
          {
            "label": "_locked",
            "offset": 18,
            "slot": "104",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:27"
          },
          {
            "label": "lendInfos",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(LendInfo)9067_storage)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:28"
          },
          {
            "label": "nftLentTime",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(InviToken)9875": {
            "label": "contract InviToken",
            "numberOfBytes": "20"
          },
          "t_contract(PriceManager)7779": {
            "label": "contract PriceManager",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8571": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(LendInfo)9067_storage)": {
            "label": "mapping(uint256 => struct LendInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendInfo)9067_storage": {
            "label": "struct LendInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lentAmount",
                "type": "t_uint256",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3ef7197c5a5d3988905d5d4634fc006fc3cf93e90860f6e6b18fe29038fdec92": {
      "address": "0x58F083eeE59013985543a9D1EFbc0f888BC579Da",
      "txHash": "0x8457fc144c575c052182744c285eb7721e0c0ef238160c1073a1011a6f05abbd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "stToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)10282",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:28"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)8571",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:29"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(LiquidityProviderPool)7694",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:30"
          },
          {
            "label": "inviTokenStakeContract",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(InviTokenStake)6094",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:31"
          },
          {
            "label": "liquidStakingContract",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(ILiquidStaking)10384",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:32"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 20,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:34"
          },
          {
            "label": "_setLpPoolContract",
            "offset": 21,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:35"
          },
          {
            "label": "_setInviTokenStakeContract",
            "offset": 22,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:36"
          },
          {
            "label": "_locked",
            "offset": 23,
            "slot": "105",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:37"
          },
          {
            "label": "_networkId",
            "offset": 24,
            "slot": "105",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:38"
          },
          {
            "label": "lpPoolRewardPortion",
            "offset": 28,
            "slot": "105",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:41"
          },
          {
            "label": "inviTokenStakeRewardPortion",
            "offset": 0,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:42"
          },
          {
            "label": "totalNFTRewards",
            "offset": 4,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:43"
          },
          {
            "label": "stakingAPR",
            "offset": 20,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:45"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:46"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 16,
            "slot": "107",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:48"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 20,
            "slot": "107",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:49"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:50"
          },
          {
            "label": "slippage",
            "offset": 16,
            "slot": "108",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:52"
          },
          {
            "label": "totalClaimableAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:53"
          },
          {
            "label": "lastStTokenDistributeTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:54"
          },
          {
            "label": "lastClaimAndSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:55"
          },
          {
            "label": "stTokenDistributePeriod",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:56"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint32,t_struct(UnstakeRequest)9083_storage)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:59"
          },
          {
            "label": "claimableAmount",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)10282": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILiquidStaking)10384": {
            "label": "contract ILiquidStaking",
            "numberOfBytes": "20"
          },
          "t_contract(InviTokenStake)6094": {
            "label": "contract InviTokenStake",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityProviderPool)7694": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)8571": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(UnstakeRequest)9083_storage)": {
            "label": "mapping(uint32 => struct UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)9083_storage": {
            "label": "struct UnstakeRequest",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "requestType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
