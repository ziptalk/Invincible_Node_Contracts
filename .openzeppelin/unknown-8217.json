{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2E0C0faB1C1c122C0f3E1a06521D73979E83E6ED",
    "txHash": "0x0c02d3b97935e7cdc504a2dcfe42e0f689339f9a7b4ccea6661d2ed024765298"
  },
  "proxies": [
    {
      "address": "0x141c25aa825E46ebCefa7A049498076727C3a709",
      "txHash": "0xee9a0911fae5d9fd808a22850db63debbcddbffd6d862302452e0d98b3ff38a3",
      "kind": "transparent"
    },
    {
      "address": "0xfC3D3eD2B1bfcD71A759fD9fB9F25640F2117d51",
      "txHash": "0x469a5967f66bff8097e881d448cd58aba1bdadf4365e90b4cb40b9983f783da5",
      "kind": "transparent"
    },
    {
      "address": "0x53354c13D244e9acE2660283605Cbbd12a0cd9C1",
      "txHash": "0xbd896b53cc586607bdfa99c48d358f07e260601773a28c1b66754a582b17dc4f",
      "kind": "transparent"
    },
    {
      "address": "0x94e130D1f5f62A38D5d168fEB7474368D9C970ce",
      "txHash": "0x16655aa7be35cfa0abd81031de73602f08c83a216b5f9122f6efaa52f7f3ca5c",
      "kind": "transparent"
    },
    {
      "address": "0x27A64f4c23a883e19efECaC8DEb90666035c8f1B",
      "txHash": "0x6a0cbc91384399a80c7ab705c3e9fbef669820cc89cfad75be4d62c44af4ae82",
      "kind": "transparent"
    },
    {
      "address": "0xFc0C8919552F040d085587c36037280e2FE814f0",
      "txHash": "0x5546c3cc9bb5ee16550fb4771e99abd3570bf38185df68a771f7655f3ba9d385",
      "kind": "transparent"
    },
    {
      "address": "0xB87A3cbb05598Ad291d3b6e28A250C75d7f2A40f",
      "txHash": "0x1b26abb194fa9e50cf186790e72f88c6b2e08bb7be3db11dd7c09abbf4c0f27f",
      "kind": "transparent"
    },
    {
      "address": "0x0D6c4fc49ca3f4187a0eE87d30a4fc44E4B68b0b",
      "txHash": "0xd2d8268b4ac8203b58e077a543bd08e41ab11db67d611fb15758a0ea399fc12b",
      "kind": "transparent"
    },
    {
      "address": "0x44868F0f97919034c15AB96b5d79321Fe30df5e2",
      "txHash": "0xc090d323db7b741c3e6ccf7d812de398ee7f7bdbbc06720c78db4569cc10b1d5",
      "kind": "transparent"
    },
    {
      "address": "0xA5683294c4317bA9696f5D2c4Dc7887153D5E692",
      "txHash": "0x00b45c72e433546f53a1ee7061a316f2ae42dbbccbb33c7a0d483bec681b5107",
      "kind": "transparent"
    },
    {
      "address": "0x9B0E14A8B4DDEA69198cAf823A020E3A3bCd4c87",
      "txHash": "0xd9fc1aca97be240b58107d6243a7f3541da6cf48bf4abe2af39dca81d0da7a20",
      "kind": "transparent"
    },
    {
      "address": "0x98e8669740e42eC69cB489380A7CAC16babF2EF6",
      "txHash": "0xc4d50b46b20b3b8601aaaa0050fcc4e69a92c22411be34ecb48bb0a0e228fda3",
      "kind": "transparent"
    },
    {
      "address": "0x8db78a3B4a041c940677e13692c1dEFb13318953",
      "txHash": "0x8dd5f1b2613cc5612a22b9c5ec12565616fd542dd967a0f3d5b833f3a7ef299a",
      "kind": "transparent"
    },
    {
      "address": "0x011698281E357cF3aEFFD6D61E12226a2048d0cf",
      "txHash": "0xbac2d9588accbaba530873f7cca5cedb8dfae7f16001c61aa100358d92549a2b",
      "kind": "transparent"
    },
    {
      "address": "0x7B78F7A60860B491D1Bf995d92dE0071eAe41488",
      "txHash": "0x8abcf2963f839e80d8b7a78aae46f78f3e1ba825be0f96ba70b525c766b4b8d0",
      "kind": "transparent"
    },
    {
      "address": "0x1338bDc2ee3C21285eEEAe2eAC12f670c7894bbd",
      "txHash": "0x975280aee3a8cd6228286ea017785022e4b3a6421e4b720b40bd3101f86d278b",
      "kind": "transparent"
    },
    {
      "address": "0xd040Bdda9c1718697b68A2C8769A8DE0Ee7afA54",
      "txHash": "0xf42780e9028df62e65b3e9fad49b239ae1c1f58d35a6e3e3728bccee3294a753",
      "kind": "transparent"
    },
    {
      "address": "0xe0F5e2a77e44650c405cAA66bFdda358037E2C57",
      "txHash": "0x8b369e8e11fb48618f32f898167c814fc180a3d2a563225c0d20f282e7f905c0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a9d677520a43970263be7af3bdaeb8a9a6f65b4641f33641a7a62e8bcd4c36b6": {
      "address": "0xdd449fB2a493314965ecd8b45D8B4d3998E77707",
      "txHash": "0xba288bf6d362cd98fbafaffc0ddeee26805aabfedbf0ec952be59489a1fa4e5c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "claimableAmount",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "StToken",
            "src": "contracts\\common\\tokens\\StToken.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4ad1078361617dce3a7a08dd6e21f95ce6cfe0053971648d1852fecc44d98895": {
      "address": "0x977136fdc2F6c631dcb720787e2042bfbB08bA21",
      "txHash": "0x61f94cb99a8e580b1b4b7b868156229e4e482b228bd39bbd8181afca17d47fed",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_setLendingPoolAddress",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:15"
          },
          {
            "label": "_setInviTokenStakeAddress",
            "offset": 1,
            "slot": "151",
            "type": "t_bool",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:16"
          },
          {
            "label": "_setLpPoolAddress",
            "offset": 2,
            "slot": "151",
            "type": "t_bool",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:17"
          },
          {
            "label": "_setInviSwapPoolAddress",
            "offset": 3,
            "slot": "151",
            "type": "t_bool",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:18"
          },
          {
            "label": "_setInviCoreAddress",
            "offset": 4,
            "slot": "151",
            "type": "t_bool",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:19"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 5,
            "slot": "151",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:22"
          },
          {
            "label": "inviTokenStakeAddress",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:23"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:24"
          },
          {
            "label": "inviSwapPoolAddress",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:25"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:26"
          },
          {
            "label": "regularMintAmount",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:29"
          },
          {
            "label": "mintInterval",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:30"
          },
          {
            "label": "lastMinted",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:31"
          },
          {
            "label": "mintAmountChangeInterval",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:32"
          },
          {
            "label": "lastMintAmountChange",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:33"
          },
          {
            "label": "totalBurntAmount",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "InviToken",
            "src": "contracts\\common\\tokens\\InviToken.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ef5aee8420f1d6d7c3b051e7fba71996783fa9f84fe769b22a3508f814713d9f": {
      "address": "0xA63330Ef91F5Ce553941C027123a78C0A0B7E5fb",
      "txHash": "0x9edd4d6904dbbba0e1b788e904037d346162fededeab93b42d7db8e47c09ca37",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(LiquidityProviderPool)8233",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:15"
          },
          {
            "label": "_setLpPoolContract",
            "offset": 20,
            "slot": "151",
            "type": "t_bool",
            "contract": "ILPToken",
            "src": "contracts\\common\\tokens\\ILPToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(LiquidityProviderPool)8233": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e12c193bc6d38c052d878e62190bb0897103b277746acfca8fad6d8df7cd94c2": {
      "address": "0xc9d8306d350B77DE9679077e4522897e8dB592f4",
      "txHash": "0x61d882bff8b61e6bb58ad822d25a7834c58c3187aea360e35dd451ebc44b97db",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:26"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:29"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:518"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:21"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:22"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:23"
          },
          {
            "label": "inviSwapPool",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(InviSwapPool)10939",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:24"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:27"
          },
          {
            "label": "nftTokenIds",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint32,t_uint32)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:29"
          },
          {
            "label": "NFTOwnership",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_array(t_uint32)dyn_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:30"
          },
          {
            "label": "rewardAmount",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:31"
          },
          {
            "label": "stakeInfos",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint32,t_struct(StakeInfo)9730_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:32"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "210",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:35"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "211",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:36"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "212",
            "type": "t_uint32",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:37"
          },
          {
            "label": "_setInviSwapPool",
            "offset": 4,
            "slot": "212",
            "type": "t_bool",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(InviSwapPool)10939": {
            "label": "contract InviSwapPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(address => uint32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(StakeInfo)9730_storage)": {
            "label": "mapping(uint32 => struct StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(StakeInfo)9730_storage": {
            "label": "struct StakeInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "originalLeverageRatio",
                "type": "t_uint32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "leverageRatio",
                "type": "t_uint32",
                "offset": 4,
                "slot": "7"
              },
              {
                "label": "isLent",
                "type": "t_bool",
                "offset": 8,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "94eaf8cab8fa4065030d58266d5745f2e547afb680a36def3fb35762d10d69f4": {
      "address": "0xc8E3ac63B70003c8D164bf31ad22efCCaBB1ff53",
      "txHash": "0xa2b18078d4bc15a90e11f03a6a62c3d12546b35aff5053305544866673049ec6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)11632",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:12"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:13"
          },
          {
            "label": "_locked",
            "offset": 20,
            "slot": "102",
            "type": "t_bool",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:15"
          },
          {
            "label": "_setInviTokenAddress",
            "offset": 21,
            "slot": "102",
            "type": "t_bool",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:16"
          },
          {
            "label": "_setInvicoreAddress",
            "offset": 22,
            "slot": "102",
            "type": "t_bool",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:17"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:20"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:21"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:22"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:23"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:24"
          },
          {
            "label": "unstakeRequestTime",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:27"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:28"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:29"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:30"
          },
          {
            "label": "unstakePeriod",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:31"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:34"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:35"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:36"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:37"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:38"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:39"
          },
          {
            "label": "totalAddressNumber",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:42"
          },
          {
            "label": "addressList",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)11632": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7ced288fd669ddc0585f4cb06cc9471566b8e9addbb7fe481e290255923411db": {
      "address": "0xcc20Efde9b9d9F9262f0BC6470D525817d543350",
      "txHash": "0x643ce26d23f44a3b916e00f2263de0be9190c2326dc7e2a60329caae2253f3b0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "iLP",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILPToken)11091",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:21"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)11632",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:22"
          },
          {
            "label": "inviCoreContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(InviCore)5460",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:23"
          },
          {
            "label": "stakeNFT",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(StakeNFT)9225",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:24"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:27"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:28"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:29"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:30"
          },
          {
            "label": "totalNativeRewardAmountByAddress",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:31"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:32"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:33"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_struct(UnstakeRequestLP)9762_storage)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:34"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint32,t_address)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:35"
          },
          {
            "label": "_setInviCoreContract",
            "offset": 0,
            "slot": "114",
            "type": "t_bool",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:38"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 1,
            "slot": "114",
            "type": "t_bool",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:39"
          },
          {
            "label": "liquidityAllowableRatio",
            "offset": 2,
            "slot": "114",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:41"
          },
          {
            "label": "totalStakersCount",
            "offset": 6,
            "slot": "114",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:42"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 10,
            "slot": "114",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:44"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 14,
            "slot": "114",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:45"
          },
          {
            "label": "unstakedAmount",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:47"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:48"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:49"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:50"
          },
          {
            "label": "totalNativeRewardAmount",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:51"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:52"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "121",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:53"
          },
          {
            "label": "totalClaimableUnstakeAmount",
            "offset": 0,
            "slot": "122",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:54"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:56"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:57"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "125",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:58"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "126",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:59"
          },
          {
            "label": "lastSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "127",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:60"
          },
          {
            "label": "totalUnstakeRequestAmount",
            "offset": 0,
            "slot": "128",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:61"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "129",
            "type": "t_bool",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)11632": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILPToken)11091": {
            "label": "contract ILPToken",
            "numberOfBytes": "20"
          },
          "t_contract(InviCore)5460": {
            "label": "contract InviCore",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)9225": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UnstakeRequestLP)9762_storage)": {
            "label": "mapping(uint256 => struct UnstakeRequestLP)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_address)": {
            "label": "mapping(uint32 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequestLP)9762_storage": {
            "label": "struct UnstakeRequestLP",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "94df577e7e58550b6317023d149f89e16ff0912509d9236090631456d6558251": {
      "address": "0x5EA4E3b6d2a4DCfFe52099b98bfB03F39a180dD2",
      "txHash": "0x2027d6c41db4d0c982c5585b825348b89c921ae70a3b0235076dab484a44ebd2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(InviToken)11532",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:19"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)9225",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:20"
          },
          {
            "label": "inviSwapPool",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(InviSwapPool)10939",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:21"
          },
          {
            "label": "maxLendRatio",
            "offset": 20,
            "slot": "103",
            "type": "t_uint32",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:23"
          },
          {
            "label": "_lendRatio",
            "offset": 24,
            "slot": "103",
            "type": "t_uint32",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:24"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:25"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 0,
            "slot": "105",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:26"
          },
          {
            "label": "_setInviSwapPoolContract",
            "offset": 1,
            "slot": "105",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:27"
          },
          {
            "label": "_locked",
            "offset": 2,
            "slot": "105",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:28"
          },
          {
            "label": "lendInfos",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(LendInfo)9739_storage)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:29"
          },
          {
            "label": "nftLentTime",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(InviSwapPool)10939": {
            "label": "contract InviSwapPool",
            "numberOfBytes": "20"
          },
          "t_contract(InviToken)11532": {
            "label": "contract InviToken",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)9225": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(LendInfo)9739_storage)": {
            "label": "mapping(uint256 => struct LendInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendInfo)9739_storage": {
            "label": "struct LendInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "331ac7f2b578ddfe998d330d75fc51c674e211cd69d5cfcbadfae0565535bcf3": {
      "address": "0x24a87Ed20d17E0eAf2aDae08be23B228113a37C1",
      "txHash": "0x2ea804afc695f2e0435f15204c4295d888bdc947f9344370c39563bcd1f889af",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)11632",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:19"
          },
          {
            "label": "lpRewardNative",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:24"
          },
          {
            "label": "lpRewardInvi",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:25"
          },
          {
            "label": "lpScore",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:26"
          },
          {
            "label": "lpList",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint32,t_address)",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:27"
          },
          {
            "label": "lpCount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:29"
          },
          {
            "label": "totalLiquidityNative",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:30"
          },
          {
            "label": "totalLiquidityInvi",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:31"
          },
          {
            "label": "totalRewardNative",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:32"
          },
          {
            "label": "totalRewardInvi",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:33"
          },
          {
            "label": "totalLpScore",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:34"
          },
          {
            "label": "inviFees",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:36"
          },
          {
            "label": "nativeFees",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviSwapPool",
            "src": "contracts\\common\\swap\\InviSwapPool.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)11632": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_address)": {
            "label": "mapping(uint32 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "93480e2af814d37b3e91956c476055d2c445e7724002e8814759196fdf4bd917": {
      "address": "0xF13954c6F316fa30CDb5788C0BE22d5E6Eb81fD4",
      "txHash": "0xc23f395717e0f6f3d465d1e6846b7751e9eadc415aab9021296796f51d27b810",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "stToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)11632",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:32"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(InviToken)11532",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:33"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(StakeNFT)9225",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:34"
          },
          {
            "label": "lpPoolContract",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(LiquidityProviderPool)8233",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:35"
          },
          {
            "label": "inviTokenStakeContract",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(InviTokenStake)6331",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:36"
          },
          {
            "label": "liquidStakingContract",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(ILiquidStaking)11734",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:37"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 20,
            "slot": "106",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:39"
          },
          {
            "label": "_setLpPoolContract",
            "offset": 21,
            "slot": "106",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:40"
          },
          {
            "label": "_setInviTokenStakeContract",
            "offset": 22,
            "slot": "106",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:41"
          },
          {
            "label": "_locked",
            "offset": 23,
            "slot": "106",
            "type": "t_bool",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:42"
          },
          {
            "label": "_networkId",
            "offset": 24,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:43"
          },
          {
            "label": "lpPoolRewardPortion",
            "offset": 28,
            "slot": "106",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:46"
          },
          {
            "label": "inviTokenStakeRewardPortion",
            "offset": 0,
            "slot": "107",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:47"
          },
          {
            "label": "totalNFTRewards",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:48"
          },
          {
            "label": "stakingAPR",
            "offset": 0,
            "slot": "109",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:50"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:51"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 0,
            "slot": "111",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:53"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 4,
            "slot": "111",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:54"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:55"
          },
          {
            "label": "nftUnstakePeriod",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:56"
          },
          {
            "label": "slippage",
            "offset": 0,
            "slot": "114",
            "type": "t_uint32",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:58"
          },
          {
            "label": "totalClaimableAmount",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:59"
          },
          {
            "label": "lastStTokenDistributeTime",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:60"
          },
          {
            "label": "lastClaimAndSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:61"
          },
          {
            "label": "stTokenDistributePeriod",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:62"
          },
          {
            "label": "totalStakedPure",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:63"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_uint32,t_struct(UnstakeRequest)9755_storage)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:66"
          },
          {
            "label": "claimableAmount",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:67"
          },
          {
            "label": "nftUnstakeTime",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "InviCore",
            "src": "contracts\\common\\InviCore.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)11632": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILiquidStaking)11734": {
            "label": "contract ILiquidStaking",
            "numberOfBytes": "20"
          },
          "t_contract(InviToken)11532": {
            "label": "contract InviToken",
            "numberOfBytes": "20"
          },
          "t_contract(InviTokenStake)6331": {
            "label": "contract InviTokenStake",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityProviderPool)8233": {
            "label": "contract LiquidityProviderPool",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)9225": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(UnstakeRequest)9755_storage)": {
            "label": "mapping(uint32 => struct UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)9755_storage": {
            "label": "struct UnstakeRequest",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "requestType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7eaffb67646c1a6be96dd0496a4b886f370d8f5fb26b9c2681fdaf9a636c11dd": {
      "address": "0x887A6DB8F391347d48475Cb9f9371FcaE0bD15d2",
      "txHash": "0x49edc6b64f06dba769c70ee3c981eae43fa93196441a4007a464560caf5da7b7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:26"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:29"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:518"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:21"
          },
          {
            "label": "lendingPoolAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:22"
          },
          {
            "label": "lpPoolAddress",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:23"
          },
          {
            "label": "inviSwapPool",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(InviSwapPool)10987",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:24"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:27"
          },
          {
            "label": "nftTokenIds",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint32,t_uint32)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:29"
          },
          {
            "label": "NFTOwnership",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_array(t_uint32)dyn_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:30"
          },
          {
            "label": "rewardAmount",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:31"
          },
          {
            "label": "stakeInfos",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint32,t_struct(StakeInfo)9778_storage)",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:32"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "210",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:35"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "211",
            "type": "t_string_storage",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:36"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "212",
            "type": "t_uint32",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:37"
          },
          {
            "label": "_setInviSwapPool",
            "offset": 4,
            "slot": "212",
            "type": "t_bool",
            "contract": "StakeNFT",
            "src": "contracts\\common\\StakeNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(InviSwapPool)10987": {
            "label": "contract InviSwapPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(address => uint32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(StakeInfo)9778_storage)": {
            "label": "mapping(uint32 => struct StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(StakeInfo)9778_storage": {
            "label": "struct StakeInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "originalLeverageRatio",
                "type": "t_uint32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "leverageRatio",
                "type": "t_uint32",
                "offset": 4,
                "slot": "7"
              },
              {
                "label": "isLent",
                "type": "t_bool",
                "offset": 8,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "96a9d816ba8bba9d1b2a6a341997a342c7d364be3549851462210747c57a77b0": {
      "address": "0x18c8C27259402962602B3b2Cb07fbA1E4F7Aac61",
      "txHash": "0x374bb01a58fb6f20b7129a89603ffa8a0703bc96075740e5214a8dada0845f15",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)11680",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:12"
          },
          {
            "label": "inviCoreAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:13"
          },
          {
            "label": "_locked",
            "offset": 20,
            "slot": "102",
            "type": "t_bool",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:15"
          },
          {
            "label": "_setInviTokenAddress",
            "offset": 21,
            "slot": "102",
            "type": "t_bool",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:16"
          },
          {
            "label": "_setInvicoreAddress",
            "offset": 22,
            "slot": "102",
            "type": "t_bool",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:17"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:20"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:21"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:22"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:23"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:24"
          },
          {
            "label": "unstakeRequestTime",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:27"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:28"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:29"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:30"
          },
          {
            "label": "unstakePeriod",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:31"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:34"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:35"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:36"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:37"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:38"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:39"
          },
          {
            "label": "totalAddressNumber",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:42"
          },
          {
            "label": "addressList",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "InviTokenStake",
            "src": "contracts\\common\\InviTokenStake.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)11680": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c67169a6a4029ba0abaa3f6284ca27194a9a5e2c77dedbed4f9d3281f20c0588": {
      "address": "0x6D44566065ea747DA901De7174873B6709712509",
      "txHash": "0xaa96e5fa12594fad05a7a60f4943771b9386400fefb7a972942abeb5ef11e7d4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "iLP",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILPToken)11139",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:21"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)11680",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:22"
          },
          {
            "label": "inviCoreContract",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(InviCore)5460",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:23"
          },
          {
            "label": "stakeNFT",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(StakeNFT)9273",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:24"
          },
          {
            "label": "stakedAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:27"
          },
          {
            "label": "nativeRewardAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:28"
          },
          {
            "label": "inviRewardAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:29"
          },
          {
            "label": "totalInviRewardAmountByAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:30"
          },
          {
            "label": "totalNativeRewardAmountByAddress",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:31"
          },
          {
            "label": "claimableUnstakeAmount",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:32"
          },
          {
            "label": "unstakeRequestAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:33"
          },
          {
            "label": "unstakeRequests",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_struct(UnstakeRequestLP)9810_storage)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:34"
          },
          {
            "label": "allStakers",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint32,t_address)",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:35"
          },
          {
            "label": "_setInviCoreContract",
            "offset": 0,
            "slot": "114",
            "type": "t_bool",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:38"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 1,
            "slot": "114",
            "type": "t_bool",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:39"
          },
          {
            "label": "liquidityAllowableRatio",
            "offset": 2,
            "slot": "114",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:41"
          },
          {
            "label": "totalStakersCount",
            "offset": 6,
            "slot": "114",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:42"
          },
          {
            "label": "unstakeRequestsRear",
            "offset": 10,
            "slot": "114",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:44"
          },
          {
            "label": "unstakeRequestsFront",
            "offset": 14,
            "slot": "114",
            "type": "t_uint32",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:45"
          },
          {
            "label": "unstakedAmount",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:47"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:48"
          },
          {
            "label": "totalStakedAmount",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:49"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:50"
          },
          {
            "label": "totalNativeRewardAmount",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:51"
          },
          {
            "label": "totalInviRewardAmount",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:52"
          },
          {
            "label": "totalClaimableInviAmount",
            "offset": 0,
            "slot": "121",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:53"
          },
          {
            "label": "totalClaimableUnstakeAmount",
            "offset": 0,
            "slot": "122",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:54"
          },
          {
            "label": "lastNativeRewardDistributeTime",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:56"
          },
          {
            "label": "inviRewardInterval",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:57"
          },
          {
            "label": "inviReceiveInterval",
            "offset": 0,
            "slot": "125",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:58"
          },
          {
            "label": "lastInviRewardedTime",
            "offset": 0,
            "slot": "126",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:59"
          },
          {
            "label": "lastSplitUnstakedAmountTime",
            "offset": 0,
            "slot": "127",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:60"
          },
          {
            "label": "totalUnstakeRequestAmount",
            "offset": 0,
            "slot": "128",
            "type": "t_uint256",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:61"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "129",
            "type": "t_bool",
            "contract": "LiquidityProviderPool",
            "src": "contracts\\common\\LiquidityProviderPool.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)11680": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILPToken)11139": {
            "label": "contract ILPToken",
            "numberOfBytes": "20"
          },
          "t_contract(InviCore)5460": {
            "label": "contract InviCore",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)9273": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UnstakeRequestLP)9810_storage)": {
            "label": "mapping(uint256 => struct UnstakeRequestLP)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_address)": {
            "label": "mapping(uint32 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequestLP)9810_storage": {
            "label": "struct UnstakeRequestLP",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7c56a30a944e652f773866e0757d5735f025e11e52f0e242517c6142617d3b58": {
      "address": "0x292Ec2FdE3F95cd686e0a54E9daAc34F8380a39a",
      "txHash": "0xf1b02e8cb07e7c7b9b73c42e9d99c4accaa5f56b48f05563951e0e4dcacf5429",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "inviToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(InviToken)11580",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:20"
          },
          {
            "label": "stakeNFTContract",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(StakeNFT)9273",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:21"
          },
          {
            "label": "inviSwapPool",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(InviSwapPool)10987",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:22"
          },
          {
            "label": "inviTokenStake",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(InviTokenStake)6343",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:23"
          },
          {
            "label": "maxLendRatio",
            "offset": 20,
            "slot": "104",
            "type": "t_uint32",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:25"
          },
          {
            "label": "_lendRatio",
            "offset": 24,
            "slot": "104",
            "type": "t_uint32",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:26"
          },
          {
            "label": "totalLentAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:27"
          },
          {
            "label": "boostRequirementAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:28"
          },
          {
            "label": "_setStakeNFTContract",
            "offset": 0,
            "slot": "107",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:29"
          },
          {
            "label": "_setInviSwapPoolContract",
            "offset": 1,
            "slot": "107",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:30"
          },
          {
            "label": "_locked",
            "offset": 2,
            "slot": "107",
            "type": "t_bool",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:31"
          },
          {
            "label": "lendInfos",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_struct(LendInfo)9787_storage)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:32"
          },
          {
            "label": "nftLentTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LendingPool",
            "src": "contracts\\common\\LendingPool.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(InviSwapPool)10987": {
            "label": "contract InviSwapPool",
            "numberOfBytes": "20"
          },
          "t_contract(InviToken)11580": {
            "label": "contract InviToken",
            "numberOfBytes": "20"
          },
          "t_contract(InviTokenStake)6343": {
            "label": "contract InviTokenStake",
            "numberOfBytes": "20"
          },
          "t_contract(StakeNFT)9273": {
            "label": "contract StakeNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(LendInfo)9787_storage)": {
            "label": "mapping(uint256 => struct LendInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendInfo)9787_storage": {
            "label": "struct LendInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftId",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
